[versions]
# Android
agp = "8.9.0"
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "36"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.8.4"

# Compose
compose-multiplatform = "1.7.3"
uiTooling = "1.7.8"
navigation = "2.8.0-alpha10"

# Kotlin
kotlin = "2.1.20"
kotlinx-datetime = "0.6.2"
kotlinx-serialization = "1.8.0"

# Code Style Check
ktlint = "11.6.1"
ktlintRuleset = "0.4.22"

# Dependency injection
koin = "4.0.0"

# Firebase
gitliveFirebase = "1.13.0"
firebasePlugin = "4.4.1"
crashlyticsPlugin = "3.0.2"

# Monetization
purchases-kmp = "1.7.1+13.25.0"

# Navigation
decompose = "3.0.0"

# Networking
coil = "3.1.0"
ktor = "3.1.1"

# Supabase
supabase = "3.1.3"


[libraries]
# Android
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Kotlin
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Compose
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "uiTooling" }
jetpack-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }

# Code Style
ktlintRuleset = { module = "io.nlopez.compose.rules:ktlint", version.ref = "ktlintRuleset" }

# Dependency Injection
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

# Firebase
dev-firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "gitliveFirebase" }
gitlive-firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "gitliveFirebase" }
gitlive-firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "gitliveFirebase" }
gitlive-firebase-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "gitliveFirebase" }
gitlive-firebase-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "gitliveFirebase" }

# Monetization
purchases-core = { module = "com.revenuecat.purchases:purchases-kmp-core", version.ref = "purchases-kmp" }
purchases-result = { module = "com.revenuecat.purchases:purchases-kmp-result", version.ref = "purchases-kmp" }
purchases-ui = { module = "com.revenuecat.purchases:purchases-kmp-ui", version.ref = "purchases-kmp" }

# Navigation
decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensions-compose = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose" }

# Networking
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-io = { module = "io.ktor:ktor-io", version.ref = "ktor" }

# Supabase
supabase-bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "supabase" }
supabase-auth-compose = { module = "io.github.jan-tennert.supabase:compose-auth" }
supabase-realtime-kt = { module = "io.github.jan-tennert.supabase:realtime-kt" }


[bundles]
koin-compose = [
    "koin-compose",
    "koin-compose-viewmodel",
    "koin-compose-viewmodel-navigation"
]


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
crashlyticsPlugin = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsPlugin" }
firebasePlugin = { id = "com.google.gms.google-services", version.ref = "firebasePlugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }

# Custom Gradle Plugins
hws-kotlinMultiplatform = { id = "com.duscaranari.themedbingocardsgenerator.kotlin.multiplatform" }
hws-androidLibrary = { id = "com.duscaranari.themedbingocardsgenerator.android.library" }
